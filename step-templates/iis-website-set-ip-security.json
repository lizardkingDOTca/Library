{
  "Id": "2aab8e8b-6a55-462c-91ca-3c2a395e82a5",
  "Name": "IIS Website - Set IP Security",
  "Description": "Takes a list of ip/mask and allow them in ipsecurity",
  "ActionType": "Octopus.Script",
  "Version": 10,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptBody": "$existingRules = Get-WebConfiguration /system.webServer/security/ipSecurity/* -location $Site -pspath IIS://;\r\n[Object[]]$newRules = @();\r\n\r\n$ips = $IpAddresses -split '\\n';\r\n$ips = $ips.Trim('\\r');\r\nforeach ($u in $ips) {\r\n    $a = $u.Split(\"/\");\r\n    $newRules += [Object]@{ ipAddress = $a[0]; subnetMask = $a[1]; allowed = $true };\r\n}\r\n\r\nif ($EnableProxyMode -eq \"true\") {\r\n    Write-Output \"Enabling proxy mode\"\r\n    set-webconfigurationproperty -Filter /system.webServer/security/ipSecurity -location $Site -Name \"enableProxyMode\" -Value \"true\"\r\n}\r\n\r\nif ($SetDeny -eq \"true\") {\r\n    Write-Output \"Setting Deny rule\"\r\n    set-webconfigurationproperty -Filter /system.webServer/security/ipSecurity -location $Site -Name \"allowUnlisted\" -Value \"false\"\r\n}\r\n\r\nfunction addRules([string]$website, [Object[]]$newRules, [Object[]]$oldRules) {\r\n\r\n    foreach ($rule in $newRules) {\r\n        if (ruleExists $rule $oldRules) {\r\n            Write-Host \"Rule $($rule.ipAddress)/$($rule.subnetMask) already exists\";\r\n\r\n            continue;\r\n        }\r\n\r\n        $value = @{ipAddress = $($rule.ipAddress); allowed = \"true\" }\r\n        if ([string]::IsNullOrEmpty($rule.subnetMask)) {\r\n            Write-Output \"Adding ip $($rule.ipAddress) to allow\"\r\n        }\r\n        else {\r\n            Write-Output \"Adding ip $($rule.ipAddress)/$($rule.subnetMask) to allow\"\r\n            $value.subnetMask = $rule.subnetMask;\r\n        }\r\n\r\n        add-webconfiguration /system.webServer/security/ipSecurity -location $website -value $value -pspath IIS://\r\n    }    \r\n}\r\n\r\nfunction clearRules([string]$website, [Object[]]$newRules, [Object[]]$oldRules) {\r\n\r\n    foreach ($rule in $oldRules) {\r\n        if (ruleExists $rule $newRules) {\r\n            continue;\r\n        }\r\n\r\n        Write-Host \"Rule $($rule.ipAddress)/$($rule.subnetMask) is not exists, remove it\";\r\n\r\n        Clear-WebConfiguration -Filter $rule.ItemXPath -location $rule.Location\r\n    }    \r\n}\r\n\r\nfunction ruleExists([Object]$rule, [Object[]]$rules) {\r\n    foreach ($r in $rules) {\r\n        if ($r.ipAddress -eq $rule.ipAddress -and $r.allowed -eq $rule.allowed) {\r\n            if ($r.subnetMask -eq $rule.subnetMask) {\r\n                return $true;\r\n            }\r\n\r\n            if (([string]::IsNullOrEmpty($r.subnetMask) -or $r.subnetMask -eq \"255.255.255.255\") -and ([string]::IsNullOrEmpty($rule.subnetMask) -or $rule.subnetMask -eq \"255.255.255.255\")) {\r\n                return $true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return $false;\r\n}\r\n\r\naddRules $Site $newRules $existingRules;\r\nclearRules $Site $newRules $existingRules;\r\n",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "357e87c7-908c-4cdb-af63-8818cef5bd23",
      "Name": "Site",
      "Label": "Name of Website",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": {}
    },
    {
      "Id": "9db7ed01-c348-48ee-868b-ebcd0d87cce1",
      "Name": "IpAddresses",
      "Label": "List of ip addresses",
      "HelpText": "A newline separated list of IP addresses and/or IP address and subnet mask pairs in the format <IPAddress>/<SubnetMask>.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      },
      "Links": {}
    },
    {
      "Id": "2854ab2d-a000-48dd-9b20-6930c73c96fb",
      "Name": "EnableProxyMode",
      "Label": "Enable proxy mode",
      "HelpText": "If the website is running behind a proxy, this setting most likely need to be checked.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      },
      "Links": {}
    },
    {
      "Id": "7d8cc90e-281e-4718-a0e9-b1daa522d5c9",
      "Name": "SetDeny",
      "Label": "Set deny",
      "HelpText": "If checked, IIS will be changed to \"Deny\" all IP addresses not added to the list.",
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      },
      "Links": {}
    }
  ],
  "LastModifiedBy": "olsh",
  "$Meta": {
    "ExportedAt": "2021-03-01T11:24:20.680Z",
    "OctopusVersion": "3.7.4",
    "Type": "ActionTemplate"
  },
  "Category": "iis"
}