{
  "Id": "1409c3dd-e87d-49f1-9b4f-382af800b75d",
  "Name": "Deploy SSAS from Package",
  "Description": "Deploys SSAS packages using Microsoft.AnalysisServices.Deployment.exe.",
  "ActionType": "Octopus.Script",
  "Version": 14,
  "CommunityActionTemplateId": null,
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'\n\nfunction Confirm-Argument($name, $value) {\n    if (!$value) {\n        throw ('Missing required value for parameter ''{0}''.' -f $name)\n    }\n    return $value\n}\n\n# Returns the Microsoft.AnalysisServices.Deployment.exe path\nfunction Get-SSASexe\n{\n\t# Search for file\n    $ssasExe = Get-ChildItem -Path \"C:\\Program Files (x86)\" -Recurse | Where-Object {$_.Name -eq \"Microsoft.AnalysisServices.Deployment.exe\"}\n    \n    # Check for null\n    if ($null -eq $ssasExe)\n    {\n    \t# Display error\n        Write-Error \"Unable to find Microsoft.AnalysisServices.Deployment.exe!\"\n    }\n\n    # Check for mulitple results\n    if ($ssasExe.GetType().IsArray)\n    {\n        # Declare local variables\n        $highestVersion = $null\n        \n        # Display multiple returned\n        Write-Host \"Multiple files returned, finding highest version ...\"\n\n        # Loop through results\n        foreach ($file in $ssasExe)\n        {\n            # Check version \n            if (($null -eq $highestVersion) -or ([version]$file.VersionInfo.ProductVersion) -gt [version]$highestVersion.VersionInfo.ProductVersion)\n            {\n                # Assign it\n                $highestVersion = $file\n            }\n        }\n\n        # Overwrite original\n        $ssasExe = $highestVersion\n    }\n    \n    # Return the path\n    return $ssasExe.FullName\n}\n\n# Update Deploy xml (.deploymenttargets)\nfunction Update-Deploy {\n\t[xml]$deployContent = Get-Content $file\n\t$deployContent.DeploymentTarget.Database = $ssasDatabase \n\t$deployContent.DeploymentTarget.Server = $ssasServer\n\t$deployContent.DeploymentTarget.ConnectionString = 'DataSource=' + $ssasServer + ';Timeout=0'\n\t$deployContent.Save($file)\n}\n# Update Config xml (.configsettings)\nfunction Update-Config {\n\t[xml]$configContent = Get-Content $file\n    $configContent.ConfigurationSettings.Database.DataSources.DataSource.ConnectionString = 'Provider=SQLNCLI11.1;Data Source=' + $dbServer + ';Integrated Security=SSPI;Initial Catalog=' + $dbDatabase\n\t$configContent.Save($file)\n}\n# Update Config xml (.deploymentoptions)\nfunction Update-Option {\n\t[xml]$optionContent = Get-Content $file\n    $optionContent.DeploymentOptions.ProcessingOption = 'DoNotProcess'\n\t$optionContent.Save($file)\n}\n\n# Get arguments\n$ssasPackageStepName = Confirm-Argument 'SSAS Package Step Name' $OctopusParameters['SsasPackageStepName']\n$ssasServer = Confirm-Argument 'SSAS server name' $OctopusParameters['SsasServer']\n$ssasDatabase = Confirm-Argument 'SSAS database name' $OctopusParameters['SsasDatabase']\n$dbServer = Confirm-Argument 'SSAS source server' $OctopusParameters['SrcServer']\n$dbDatabase = Confirm-Argument 'SSAS source database' $OctopusParameters['SrcDatabase']\n\n# Set .NET CurrentDirectory to package installation path\n$installDirPathFormat = 'Octopus.Action[{0}].Output.Package.InstallationDirectoryPath' -f $ssasPackageStepName\n$installDirPath = $OctopusParameters[$installDirPathFormat]\n\nWrite-Verbose ('Setting CurrentDirectory to ''{0}''' -f $installDirPath)\n[System.Environment]::CurrentDirectory = $installDirPath\n\n# Get SSAS exe location\n$exe = Get-SSASexe\n\n$files = Get-ChildItem â€“Path $installDirPath\\* -Include *.deploymenttargets\nforeach ($file in $files) {\n  $name = [IO.Path]::GetFileNameWithoutExtension($file)\n\n  Write-Host 'Updating' $file\n  Update-Deploy\n  $file = $installDirPath + '\\' + $name + '.configsettings'\n  if(Test-Path $file) {\n      Write-Host 'Updating' $file\n      Update-Config\n  } else {\n    Write-Host \"Config settings doesn't exist. Skipping.\"\n  }\n  $file = $installDirPath + '\\' + $name + '.deploymentoptions'\n  Write-Host 'Updating' $file\n  Update-Option\n\n  $ssasArguments = @()\n  $ssasArguments += ('\"' + $installDirPath + '\\' + $name + '.asdatabase\"')\n  $ssasArguments += '/s:\"' + $installDirPath + '\\Log.txt\"'\n  \n  Write-Host $exe $ssasArguments\n  & $exe $ssasArguments\n  \n  # Get last exit code\n  $ssasExitCode = $LastExitcode\n  \n  # Check to make sure log file exists\n  if ((Test-Path -Path \"$installDirPath\\Log.txt\") -eq $true)\n  {\n    # Upload log as artifact\n    New-OctopusArtifact -Path \"$installDirPath\\Log.txt\" -Name \"Log.txt\"\n  }\n  else\n  {\n    # Write error\n    Write-Error \"Error: $installDirPath\\Log.txt not found!\"\n  }\n  \n  # Check the code\n  if ($ssasExitCode -ne 0)\n  {\n  \tWrite-Error \"Operation failed, see log for details.\"\n  }\n}\n",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptFileName": null,
    "Octopus.Action.Package.FeedId": null,
    "Octopus.Action.Package.PackageId": null
  },
  "Parameters": [
    {
      "Id": "435fbf52-470d-442f-88d3-0b708dfc3657",
      "Name": "SsasPackageStepName",
      "Label": "",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      },
      "Links": { }
    },
    {
      "Id": "a0713297-cdeb-47cd-ac43-4bf9603c8052",
      "Name": "SsasServer",
      "Label": "Server",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": { }
    },
    {
      "Id": "7bf5ec64-3383-40ae-935e-e78c236cdf21",
      "Name": "SsasDatabase",
      "Label": "Database",
      "HelpText": null,
      "DefaultValue": null,
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": { }
    },
    {
      "Id": "d7d4fcbc-d0d4-4a3b-b477-28d23fbe1f9b",
      "Name": "SrcServer",
      "Label": "Data Source - Server",
      "HelpText": null,
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": { }
    },
    {
      "Id": "45b60a3f-9339-4c69-bc14-df94b47be9e7",
      "Name": "SrcDatabase",
      "Label": "Data Source - Database",
      "HelpText": null,
      "DefaultValue": "Warehouse",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      },
      "Links": { }
    }
  ],
  "LastModifiedOn": "2020-09-25T23:49:43.003Z",
  "LastModifiedBy": "twerthi",
  "$Meta": {
    "ExportedAt": "2020-09-25T23:49:43.003Z",
    "OctopusVersion": "2020.4.0",
    "Type": "ActionTemplate"
  },
  "Category": "sql"
}