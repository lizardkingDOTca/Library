{
  "Id": "75a8f263-b690-4a55-84b7-9165ac9b6196",
  "Name": "Save Octopus Output Variable With Scoping",
  "Description": "Saves an [output variable](https://octopus.com/docs/deploying-applications/variables/output-variables) to the given project / library variable set with scoping",
  "ActionType": "Octopus.Script",
  "Version": 6,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.RunOnServer": "true",
    "Octopus.Action.Script.ScriptBody": "$ErrorActionPreference = 'Stop'\n\n$StepTemplate_BaseUrl = $OctopusParameters['#{if Octopus.Web.ServerUri}Octopus.Web.ServerUri#{else}Octopus.Web.BaseUrl#{/if}'].Trim('/')\nif ([string]::IsNullOrWhiteSpace($StepTemplate_ApiKey)) {\n    throw \"The step parameter 'API Key' was not found. This step requires an API Key to function, please provide one and try again.\"\n}\n\nfunction Invoke-OctopusApi {\n    param(\n        [Parameter(Position = 0, Mandatory)]$Uri,\n        [ValidateSet(\"Get\", \"Put\")]$Method = 'Get',\n        $Body\n    )\n    $requestParameters = @{\n        Uri = ('{0}/{1}' -f $StepTemplate_BaseUrl, $Uri.TrimStart('/'))\n        Method = $Method\n        Headers = @{ \"X-Octopus-ApiKey\" = $StepTemplate_ApiKey }\n        UseBasicParsing = $true\n    }\n    if ($null -ne $Body) { $requestParameters.Add('Body', ($Body | ConvertTo-Json -Depth 10)) }\n    Write-Verbose \"$($Method.ToUpperInvariant()) $($requestParameters.Uri)\"   \n    Invoke-WebRequest @requestParameters | % Content | ConvertFrom-Json | Write-Output\n}\n\nfunction Test-SpacesApi {\n\tWrite-Verbose \"Checking API compatibility\";\n\t$rootDocument = Invoke-OctopusApi 'api/';\n    if($rootDocument.Links -ne $null -and $rootDocument.Links.Spaces -ne $null) {\n    \tWrite-Verbose \"Spaces API found\"\n    \treturn $true;\n    }\n    Write-Verbose \"Pre-spaces API found\"\n    return $false;\n}\n\nif(Test-SpacesApi) {\n\t$spaceId = $OctopusParameters['Octopus.Space.Id'];\n    if([string]::IsNullOrWhiteSpace($spaceId)) {\n        throw \"This step needs to be run in a context that provides a value for the 'Octopus.Space.Id' system variable. In this case, we received a blank value, which isn't expected - please reach out to our support team at https://help.octopus.com if you encounter this error.\";\n    }\n\t$baseApiUrl = \"api/$spaceId\" ;\n} else {\n\t$baseApiUrl = \"api\" ;\n}\n\nfunction Check-Scope {\n\tparam(\n    \t[Parameter(Position = 0, Mandatory)]\n        [string]$ScopeName,\n        [Parameter(Position = 1, Mandatory)]\n        [AllowEmptyCollection()]\n        [array]$ScopeValues,\n        [Parameter(Position = 2)]\n        [array]$ExistingScopeValue,\n        [Parameter(Position = 3)]\n        [string]$LookingForScopeValue\n    )\n    \n    if ($LookingForScopeValue) {\n     \t\n    \tWrite-Host \"Checking $ScopeName Scope\"\n        \n        $scopes = Create-Scope $ScopeName $ScopeValues $LookingForScopeValue\n        \n        if (-not ($ExistingScopeValue -and (Compare-Object $ExistingScopeValue $scopes) -eq $null)) {\n        \tWrite-Host \"$ScopeName scope does not match\"\n        \treturn $false\n        }\n        Write-Host \"$ScopeName scope matches\"\n    } else {\n    \tif ($ExistingScopeValue) {\n        \tWrite-Host \"$ScopeName scope does not match\"\n        \treturn $false\n        }\n    }\n    \n    return $true\n}\n\nfunction Create-Scope {\n\tparam(\n    \t[Parameter(Position = 0, Mandatory)]\n        [string]$ScopeName,\n        [Parameter(Position = 1, Mandatory)]\n        [array]$ScopeValues,\n        [Parameter(Position = 2)]\n        [string]$ScopeValue\n    )\n    \n    $scopes = @()\n    \n    foreach ($scope in $ScopeValue.Split($StepTemplate_ScopeDelimiter)) {\n    \tif ($ScopeName -eq \"TenantTag\") {\n    \t\t$value = $ScopeValues | Where { $_.Id -eq $scope } | Select -First 1\n    \t}\n        else {\n    \t\t$value = $ScopeValues | Where { $_.Name -eq $scope } | Select -First 1\n    \t}\n    \t$scopes += $value.Id\n    }\n    \n    return $scopes\n}\n\n$outputVariableKey = \"Octopus.Action[${StepTemplate_DeploymentStep}].Output.${StepTemplate_VariableName}\"\nif (!$OctopusParameters.ContainsKey($outputVariableKey)) {\n    throw \"Variable '$StepTemplate_VariableName' has not been output from '$StepTemplate_DeploymentStep'\"\n}\n$isSensitive = [System.Convert]::ToBoolean($StepTemplate_IsSensitive)\n$variableType = if ($isSensitive) { \"Sensitive\" } else { \"String\" }\n\n$variableValue = $OctopusParameters[$outputVariableKey]\nWrite-Host \"Name: $StepTemplate_VariableName\"\nWrite-Host \"Type: $variableType\"\nWrite-Host \"Value: $(if ($isSensitive) { \"********\" } else { $variableValue })\"\nWrite-Host ' '\n\nWrite-Host \"Retrieving $StepTemplate_VariableSetType variable set...\"\nif ($StepTemplate_VariableSetType -eq 'project') {\n    $variableSet = Invoke-OctopusApi \"$baseApiUrl/projects/all\" | ? Name -eq $StepTemplate_VariableSetName | % { Invoke-OctopusApi $_.Links.Variables }\n}\nif ($StepTemplate_VariableSetType -eq 'library') {\n    $variableSet = Invoke-OctopusApi \"$baseApiUrl/libraryvariablesets/all?ContentType=Variables\" | ? Name -eq $StepTemplate_VariableSetName | % { Invoke-OctopusApi $_.Links.Variables }\n}\nif ($null -eq $variableSet) {\n    throw \"Unable to find $StepTemplate_VariableSetType variable set '$StepTemplate_VariableSetName'\"\n}\n\n$variableExists = $false\n\n$variableSet.Variables | ? Name -eq $StepTemplate_TargetName | % {\n\tif (-not (Check-Scope 'Environment' $variableSet.ScopeValues.Environments $_.Scope.Environment $StepTemplate_EnvironmentScope)) {\n    \treturn\n    }\n\n\tif (-not (Check-Scope 'Machine' $variableSet.ScopeValues.Machines $_.Scope.Machine $StepTemplate_MachineScope)) {\n    \treturn\n    }\n    \n    if (-not (Check-Scope 'Role' $variableSet.ScopeValues.Roles $_.Scope.Role $StepTemplate_RoleScope)) {\n    \treturn\n    }\n    \n    if (-not (Check-Scope 'Action' $variableSet.ScopeValues.Actions $_.Scope.Action $StepTemplate_ActionScope)) {\n    \treturn\n    }\n    \n    if (-not (Check-Scope 'Channel' $variableSet.ScopeValues.Channels $_.Scope.Channel $StepTemplate_ChannelScope)) {\n    \treturn\n    }\n    \n    if (-not (Check-Scope 'TenantTag' $variableSet.ScopeValues.TenantTags $_.Scope.TenantTag $StepTemplate_TenantTagScope)) {\n    \treturn\n    }\n\n    Write-Host \"Updating existing variable...\"\n    Write-Host \"Existing value:\"\n\tWrite-Host \"$(if ($isSensitive) { \"********\" } else { $_.Value })\"\n    $_.Value = $variableValue\n    $_.Type = $variableType\n    $_.IsSensitive = $isSensitive\n    $variableExists = $true\n}\n\nif (!$variableExists) {\n    Write-Host \"Creating new variable...\"\n    \n    $variable = @{\n        Name = $StepTemplate_TargetName\n        Value = $variableValue\n        Type = $variableType\n        IsSensitive = $isSensitive\n        Scope = @{}\n    }\n    \n    if ($StepTemplate_EnvironmentScope) {\n    \t$variable.Scope['Environment'] = (Create-Scope 'Environment' $variableSet.ScopeValues.Environments $StepTemplate_EnvironmentScope)\n    }\n    if ($StepTemplate_RoleScope) {\n    \t$variable.Scope['Role'] = (Create-Scope 'Role' $variableSet.ScopeValues.Roles $StepTemplate_RoleScope)\n    }\n    if ($StepTemplate_MachineScope) {\n    \t$variable.Scope['Machine'] = (Create-Scope 'Machine' $variableSet.ScopeValues.Machines $StepTemplate_MachineScope)\n    }\n    if ($StepTemplate_ActionScope) {\n    \t$variable.Scope['Action'] = (Create-Scope 'Action' $variableSet.ScopeValues.Actions $StepTemplate_ActionScope)\n    }\n    if ($StepTemplate_ChannelScope) {\n    \t$variable.Scope['Channel'] = (Create-Scope 'Channel' $variableSet.ScopeValues.Channels $StepTemplate_ChannelScope)\n    }\n    if ($StepTemplate_TenantTagScope) {\n        $variable.Scope['TenantTag'] = (Create-Scope 'TenantTag' $variableSet.ScopeValues.TenantTags $StepTemplate_TenantTagScope)\n    }\n    \n    $variableSet.Variables += $variable\n}\n\nWrite-Host \"Saving updated variable set...\"\nInvoke-OctopusApi $variableSet.Links.Self -Method Put -Body $variableSet | Out-Null\n"
  },
  "Parameters": [
    {
      "Id": "bdbd77a9-cc0f-49f0-afac-6403e8ba87e4",
      "Name": "StepTemplate_ApiKey",
      "Label": "API Key",
      "HelpText": "Provide an Octopus API Key with appropriate permissions to save the variable",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "Sensitive"
      }
    },
    {
      "Id": "ed5cf637-06ed-4c38-8a8d-f17c523ec6ba",
      "Name": "StepTemplate_DeploymentStep",
      "Label": "Deployment Step",
      "HelpText": "Select the step with the [output variable](https://octopus.com/docs/deploying-applications/variables/output-variables)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "StepName"
      }
    },
    {
      "Id": "3d6f35a9-99ae-481e-b393-4319b70e0ac0",
      "Name": "StepTemplate_VariableName",
      "Label": "Variable Name",
      "HelpText": "Name of the [variable used when it was set](https://octopus.com/docs/deploying-applications/variables/output-variables#Outputvariables-Settingoutputvariablesusingscripts)",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "9265ca02-9c0f-48ad-9cb1-65d28d5a446e",
      "Name": "StepTemplate_VariableSetType",
      "Label": "Variable Set Type",
      "HelpText": "If the output variable is being saved to a project or [library variable set](https://octopus.com/docs/deploying-applications/variables/library-variable-sets)",
      "DefaultValue": "project",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "project|Project Variable\nlibrary|Library Variable Set"
      }
    },
    {
      "Id": "f511bbd7-1b75-430f-be48-d3b0787d839e",
      "Name": "StepTemplate_VariableSetName",
      "Label": "Variable Set Name",
      "HelpText": "Name of the project or [library](https://octopus.com/docs/deploying-applications/variables/library-variable-sets) variable set where the output variable should be saved",
      "DefaultValue": "#{Octopus.Project.Name}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "50a10535-b36b-4972-a9a0-ff9bb42451c7",
      "Name": "StepTemplate_TargetName",
      "Label": "Target Variable Name",
      "HelpText": "The name to use when saving the variable.\n\n_Note: The original variable name the default value._",
      "DefaultValue": "#{StepTemplate_VariableName}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "204ad3d5-804a-43cd-90ad-8bb359800c78",
      "Name": "StepTemplate_IsSensitive",
      "Label": "Is Sensitive?",
      "HelpText": "If the variable should be marked as [sensitive](https://octopus.com/docs/deploying-applications/variables/sensitive-variables) and the value masked from logs",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "fdbcad6b-ff48-4f4f-8cda-afc404fb7f10",
      "Name": "StepTemplate_EnvironmentScope",
      "Label": "Environment Scope",
      "HelpText": "The environment scope to use when creating or updating the variable.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "c4df3719-1f46-4d10-a3b7-52227f78815f",
      "Name": "StepTemplate_RoleScope",
      "Label": "Role Scope",
      "HelpText": "The role scope to use when creating or updating the variable.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "1782abd1-ed68-4cbb-85b2-efd2baaa1eae",
      "Name": "StepTemplate_MachineScope",
      "Label": "Target Scope",
      "HelpText": "The target scope to use when creating or updating the variable.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "85f14553-6425-4298-ba77-bdf31f852d0b",
      "Name": "StepTemplate_ActionScope",
      "Label": "Action Scope",
      "HelpText": "The action scope to use when creating or updating the variable.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "e4152038-fc42-4ed6-8ad5-4aa94d76a5d1",
      "Name": "StepTemplate_ChannelScope",
      "Label": "Channel Scope",
      "HelpText": "The channel scope to use when creating or updating the variable.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "a5bcd57b-d0bb-4b1c-be1b-56314e0b9684",
      "Name": "StepTemplate_TenantTagScope",
      "Label": "Tenant Tag Scope",
      "HelpText": "The tenant tag scope to use when creating or updating the variable. The value should be in the format TagSetName/TagValue.\n\n_This can be a list delimited by the Scope Delimiter (, by default)_",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "7de754f7-d8b6-4b6e-a7d1-6306cf8f7ab8",
      "Name": "StepTemplate_ScopeDelimiter",
      "Label": "Scope Delimiter",
      "HelpText": "The delimiter used by scope lists.",
      "DefaultValue": ",",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "LastModifiedAt": "2021-10-21T15:24:33.519Z",
  "LastModifiedBy": "harrisonmeister",
  "$Meta": {
    "ExportedAt": "2021-10-21T15:24:33.519Z",
    "OctopusVersion": "2021.2.7706",
    "Type": "ActionTemplate"
  },
  "Category": "octopus"
}