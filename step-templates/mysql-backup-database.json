{
  "Id": "4fa6d062-d4da-4a02-849e-dec804554453",
  "Name": "MySQL - Backup Database",
  "Description": "Backs up a MySQL database on a windows instance hosting MySQL. ",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "Author": "adamoctoclose",
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
  "Octopus.Action.Script.ScriptBody": "# Define functions\nfunction Get-ModuleInstalled\n{\n    # Define parameters\n    param(\n        $PowerShellModuleName\n    )\n\n    # Check to see if the module is installed\n    if ($null -ne (Get-Module -ListAvailable -Name $PowerShellModuleName))\n    {\n        # It is installed\n        return $true\n    }\n    else\n    {\n        # Module not installed\n        return $false\n    }\n}\n\nfunction Install-PowerShellModule\n{\n    # Define parameters\n    param(\n        $PowerShellModuleName,\n        $LocalModulesPath\n    )\n\n\t# Check to see if the package provider has been installed\n    if ((Get-NugetPackageProviderNotInstalled) -ne $false)\n    {\n    \t# Display that we need the nuget package provider\n        Write-Host \"Nuget package provider not found, installing ...\"\n        \n        # Install Nuget package provider\n        Install-PackageProvider -Name Nuget -Force\n    }\n\n\t# Save the module in the temporary location\n    Save-Module -Name $PowerShellModuleName -Path $LocalModulesPath -Force\n}\n\nfunction Get-NugetPackageProviderNotInstalled\n{\n\t# See if the nuget package provider has been installed\n    return ($null -eq (Get-PackageProvider -ListAvailable -Name Nuget -ErrorAction SilentlyContinue))\n}\n\nfunction Get-DatabaseExists\n{\n\t# Define parameters\n    param ($DatabaseName)\n    \n\t# Execute query\n    return Invoke-SqlQuery \"SHOW DATABASES LIKE '$DatabaseName';\"\n}\n\n# Define PowerShell Modules path\n$LocalModules = (New-Item \"$PSScriptRoot\\Modules\" -ItemType Directory -Force).FullName\n$env:PSModulePath = \"$LocalModules;$env:PSModulePath\"\n$PowerShellModuleName = \"SimplySql\"\n\n# Set secure protocols\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls11 -bor [System.Net.SecurityProtocolType]::Tls12\n\n# Check to see if SimplySql module is installed\nif ((Get-ModuleInstalled -PowerShellModuleName $PowerShellModuleName) -ne $true)\n{\n    # Tell user what we're doing\n    Write-Output \"PowerShell module $PowerShellModuleName is not installed, downloading temporary copy ...\"\n\n    # Install temporary copy\n    Install-PowerShellModule -PowerShellModuleName $PowerShellModuleName -LocalModulesPath $LocalModules\n}\n\n# Display\nWrite-Output \"Importing module $PowerShellModuleName ...\"\n\n# Check to see if it was downloaded\nif ((Test-Path -Path \"$LocalModules\\$PowerShellModuleName\") -eq $true)\n{\n\t# Import from temp location\n    $PowerShellModuleName =  \"$LocalModules\\$PowerShellModuleName\"\n}\n\n# Import the module\nImport-Module -Name $PowerShellModuleName\n\n\n# Create credential object for the connection\n#$SecurePassword = ConvertTo-SecureString $BackupMySQL_Password -AsPlainText -Force\n#$ServerCredential = New-Object System.Management.Automation.PSCredential ($BackupMySQL_Username, $BackupMySQL_Password)\n\ntry\n{\n\n\n\t# Connect to MySQL\n    $connectionString = \"Server=$BackupMySQL_ServerName;Port=$BackupMySQL_Port;Uid=$BackupMySQL_Username;Pwd=$BackupMySQL_Password;\"\n\n    if ($BackupMySQL_UseSSL -eq \"True\")\n    {\n\t\t# Append to connection string\n        $connectionString += \"SslMode=Required;\"\n    }\n    else\n    {\n    \t# Disable ssl\n        $connectionString += \"SslMode=none;\"\n    }\n    \n    Open-MySqlConnection -ConnectionString $connectionString\n\n    # See if database exists\n    $databaseExists = Get-DatabaseExists -DatabaseName $BackupMySQL_DatabaseName\n\n    if ($databaseExists.ItemArray.Count -eq 0)\n    {\n        # Display message\n        Write-Error \"Database $BackupMySQL_DatabaseName doesn't exist.\"\n \n    }\n    else\n    {\n\n        cd $BackupMySQL_MySQLPath\n\n        $backupname = '{0}{1}-{2}.sql' -f ($BackupMySQL_BackupDirectory, $BackupMySQL_DatabaseName ,(Get-Date -Format FileDatetime))\n\n        .\\mysqldump.exe --databases $BackupMySQL_DatabaseName > $backupname\n                \n        # Success\n        Write-Output \"$BackupMySQL_DatabaseName was backed up!\"\n    }\n}\nfinally\n{\n    Close-SqlConnection\n}\n"
},
"Parameters": [
  {
    "Id": "7030ad54-4e10-4854-998a-ca91e3b490a3",
    "Name": "BackupMySQL_ServerName",
    "Label": "Server",
    "HelpText": "Name or IP of the MySQL server",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  },
  {
    "Id": "07dbf251-a982-4cc5-b6c1-dc0af50c519c",
    "Name": "BackupMySQL_Username",
    "Label": "Username",
    "HelpText": "\tUsername with rights to dump database",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  },
  {
    "Id": "ac42a150-b7e7-4414-9dec-f18e105eaedf",
    "Name": "BackupMySQL_Password",
    "Label": "Password",
    "HelpText": "Password for the user account",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "Sensitive"
    }
  },
  {
    "Id": "62ffb949-c5db-4151-bb29-47a37586bda5",
    "Name": "BackupMySQL_DatabaseName",
    "Label": "Database Name",
    "HelpText": "Name of the database to backup",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  },
  {
    "Id": "c54832b1-571f-4475-9159-6a7342a67982",
    "Name": "BackupMySQL_Port",
    "Label": "Port",
    "HelpText": "Port number for the MySQL server",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  },
  {
    "Id": "a33dc26c-15b3-4b5e-a62f-7a5e97576bcc",
    "Name": "BackupMySQL_UseSSL",
    "Label": "Use SSL",
    "HelpText": "Check this box to force the use of SSL.",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "Checkbox"
    }
  },
  {
    "Id": "fc2c1a2f-43ba-4878-8e74-b88dad96c5d2",
    "Name": "BackupMySQL_MySQLPath",
    "Label": "MySQL Path",
    "HelpText": "Path to binaries e.g. C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin\nIf binaries don't exist on the target machine the backup will fail.",
    "DefaultValue": "C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  },
  {
    "Id": "39063215-b069-4e51-b202-65060db9fd20",
    "Name": "BackupMySQL_BackupDirectory",
    "Label": "Backup Directory",
    "HelpText": "Location to store backup file",
    "DefaultValue": "",
    "DisplaySettings": {
      "Octopus.ControlType": "SingleLineText"
    }
  }
],
  "$Meta": {
    "ExportedAt": "2020-08-11T15:11:43.135Z",
    "OctopusVersion": "2020.3.2",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "adamoctoclose",
  "Category": "mysql"
}
